#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
File : main.py.py
Func : 通过fastapi实现的mock
Author : qi.wang02@msxf.com
Date : 2021/9/24 17:05
"""

from typing import Optional, List
from fastapi import FastAPI, Request, Response
from pydantic import BaseModel
import uvicorn
import json

app = FastAPI()

resp1 = {
    "code": "10000",
    "data": {
        "PRESSURE_TEST_01_RESULT": {
            "product": "5103",
            "code": "200",
            "apply_no": "212004443223749798664",
            "id_card": "500238xxxxxxxxx",
            "mobile": "1588888158",
            "cooperator_id": "52000002",
            "serial_number": "200",
            "code_valid": "1",
            "message": "成功",
            "time_inst": "2021-08-10 13:45:34",
            "id_unqf": "f2dae801629040a2b2f87b0c231ad921",
            "name": "王奇",
            "id_unqp": "bc501814d63d4a0d95ae8f538ae9c24d",
            "ppt1": "1",
            "ppt2": "2",
            "ppt3": "3",
            "ppt4": 4,
            "ppt5": 5,
            "ppt6": 6,
            "ppt7": 7,
            "ppt8": 8,
            "ppt9": 9
        },
        "TONGDUN_MULTIPLE_RESULT": {
            "l_b5b35d3a0893c071": "bin4",
            "r_bgbz00000011": "[1, 2)",
        }
    },
    "message": "成功了",
    "cache": False,
    "idunqf": "f2dae801629040a2b2f87b0c231ad921",
    "ext": None
}

print(type(resp1))

data3 = json.dumps(resp1, sort_keys=True, indent=2)  # 排序并且缩进两个字符输出

print(type(data3))
print(data3)


class Girl(BaseModel):
    """数据验证是通过 pydantic 实现的，我们需要从中导入 BaseModel，然后继承它"""
    name: str
    age: Optional[str] = None
    length: float
    hobby: List[str]  # 对于 Model 中的 List[str] 我们不需要指定 Query（准确的说是 Field）


@app.post("/posttest")
async def read_girl():
    # girl 就是我们接收的请求体，它需要通过 json 来传递，并且这个 json 要有上面的四个字段（age 可以没有）
    # 通过 girl.xxx 的方式我们可以获取和修改内部的所有属性
    data3 = json.dumps(resp1, sort_keys=True, indent=2)  # 排序并且缩进两个字符输出
    return resp1  # 直接返回 Model 对象也是可以的


if __name__ == "__main__":
    uvicorn.run("main:app", host="127.0.0.1", port=5555)
